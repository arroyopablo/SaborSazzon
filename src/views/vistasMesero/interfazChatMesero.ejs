<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <%- include ("../partials/head") %>

</head>

<body>
  <!---menu de navegacion cliente superior-->
  <%- include ("../partials/navMesero") %>

  <p>

  </p>
  <!-- Titulo Chat -->
  <div class="bradcam_area breadcam_bg overlay" id="chat">
    <h3>Chat</h3>
  </div>

  <div class="chat-container">
    <main class="chat-main">
      <div class="chat-sidebar">
        <h3><i class="fas fa-list-ol"></i> Mesa:</h3>
        <h2 id="mesa-name"></h2>
        <h3><i class="fas fa-users"></i> En linea:</h3>
        <ul id="users"></ul>
      </div>
      <div id="chat2"></div>
    </main>
    <div class="chat-form-container">
      <form id="controls">
        <input id="content" type="text" placeholder="Mensaje" class="entradas" required autocomplete="off" />
        <button class="button2"><i class="fas fa-paper-plane"></i> Enviar</button>
      </form>
    </div>
  </div>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.9.2/qs.min.js"
    integrity="sha256-TDxXjkAUay70ae/QJBEpGKkpVslXaHHayklIVglFRT4=" crossorigin="anonymous"></script>
  <script src="/socket.io/socket.io.js"></script>

  <script>
    const chatForm = document.getElementById('controls');
    const chatMessages = document.getElementById('chat2');
    const roomName = document.getElementById('mesa-name');
    const userList = document.getElementById('users');    

    // Get username and room from URL
    const {username, mesa } = Qs.parse(location.search, {
      ignoreQueryPrefix: true,
    });

    const socket = io();

    // Join chatroom
    socket.emit('joinRoom', { username, mesa});

    // Get room and users
    socket.on('roomUsers', ({ mesa, users }) => {
      outputRoomName(mesa);
      outputUsers(users);
    });

    // Message from server
    socket.on('difundir_mensaje', (message) => {
      console.log(message);
      outputMessage(message);

      // Scroll down
      chatMessages.scrollTop = chatMessages.scrollHeight;
    });

    // Message submit
    chatForm.addEventListener('submit', (e) => {
      e.preventDefault();

      // Get message text
      const content = e.target.elements.content.value;

      // Emit message to server
      socket.emit("nuevo_mensaje", content);        

      // Clear input
      e.target.elements.content.value = '';
      e.target.elements.content.focus();
    });

    // Output message to DOM
    function outputMessage(message) {
      const div = document.createElement('div');
        div.classList.add('message');
        div.innerHTML = `<p class="meta">${message.name} <span>${message.time}</span></p>
            <p class="mensaje">
              ${message.content}
            </p>`;
        $("#chat2").append(div);
    }

    // Add room name to DOM
    function outputRoomName(mesa) {
      roomName.innerText = mesa;
    }

    // Add users to DOM
    function outputUsers(users) {
      userList.innerHTML = `
        ${users.map((user) => `<li>${user.username}</li>`).join('')}
      `;
    }
  </script>

  <div style="margin-top: 10px; position: static;">
    <%- include ("../partials/footer") %>
  </div>

</body>

</html>